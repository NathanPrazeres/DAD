package dadkvs.server;

/* these imported classes are generated by the contract */
import dadkvs.DadkvsPaxos;
import dadkvs.server.domain.DadkvsServerState;
import dadkvs.DadkvsPaxosServiceGrpc;
import io.grpc.stub.StreamObserver;

public class DadkvsPaxosServiceImpl extends DadkvsPaxosServiceGrpc.DadkvsPaxosServiceImplBase {

	DadkvsServerState serverState;

	public DadkvsPaxosServiceImpl(final DadkvsServerState state) {
		this.serverState = state;

	}

	@Override
	public void phaseone(final DadkvsPaxos.PhaseOneRequest request,
			final StreamObserver<DadkvsPaxos.PhaseOneReply> responseObserver) {
		// for debug purposes
		responseObserver.onNext(serverState.paxosState.handlePrepareRequest(request));
		responseObserver.onCompleted();
	}

	@Override
	public void phasetwo(final DadkvsPaxos.PhaseTwoRequest request,
			final StreamObserver<DadkvsPaxos.PhaseTwoReply> responseObserver) {
		// for debug purposes
		responseObserver.onNext(serverState.paxosState.handleAcceptRequest(request));
		responseObserver.onCompleted();
	}

	@Override
	public void learn(final DadkvsPaxos.LearnRequest request,
			final StreamObserver<DadkvsPaxos.LearnReply> responseObserver) {

		try {
			serverState.logSystem.writeLog("Learn request received at server " + serverState.myId);
			responseObserver.onNext(serverState.paxosState.handleLearnRequest(request));
		} catch (final Exception e) {
			serverState.logSystem.writeLog("Error: " + e.getMessage());
			e.printStackTrace();
			System.exit(0);
		}
		responseObserver.onCompleted();
	}
}
